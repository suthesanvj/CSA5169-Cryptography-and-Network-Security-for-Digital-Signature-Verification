#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MATRIX_SIZE 5

void prepareText(char *text, char *preparedText) {
    int j = 0;
    for (int i = 0; text[i] != '\0'; i++) {
        if (isalpha(text[i])) {
            preparedText[j++] = toupper(text[i]);
        }
    }
    preparedText[j] = '\0';

    for (int i = 0; preparedText[i] != '\0'; i++) {
        if (preparedText[i] == preparedText[i + 1]) {
            for (int k = strlen(preparedText); k >= i + 1; k--) {
                preparedText[k + 1] = preparedText[k];
            }
            preparedText[i + 1] = 'X';
        }
    }
}

void generatePlayfairMatrix(char matrix[MATRIX_SIZE][MATRIX_SIZE]) {
    char matrixContent[MATRIX_SIZE * MATRIX_SIZE] = "MFHIKUNOPQZVWXYELARGDSTBC";
    int index = 0;
    
    for (int i = 0; i < MATRIX_SIZE; i++) {
        for (int j = 0; j < MATRIX_SIZE; j++) {
            matrix[i][j] = matrixContent[index++];
        }
    }
}

void findPosition(char ch, char matrix[MATRIX_SIZE][MATRIX_SIZE], int *row, int *col) {
    for (int i = 0; i < MATRIX_SIZE; i++) {
        for (int j = 0; j < MATRIX_SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void playfairEncrypt(char *plaintext, char matrix[MATRIX_SIZE][MATRIX_SIZE], char *encrypted) {
    int len = strlen(plaintext);
    int i = 0, j = 0;

    while (i < len) {
        char dig1 = plaintext[i++];
        char dig2 = (i < len) ? plaintext[i++] : 'X';

        int row1, col1, row2, col2;
        findPosition(dig1, matrix, &row1, &col1);
        findPosition(dig2, matrix, &row2, &col2);

        if (row1 == row2) {
            encrypted[j++] = matrix[row1][(col1 + 1) % MATRIX_SIZE];
            encrypted[j++] = matrix[row2][(col2 + 1) % MATRIX_SIZE];
        } else if (col1 == col2) {
            encrypted[j++] = matrix[(row1 + 1) % MATRIX_SIZE][col1];
            encrypted[j++] = matrix[(row2 + 1) % MATRIX_SIZE][col2];
        } else {
            encrypted[j++] = matrix[row1][col2];
            encrypted[j++] = matrix[row2][col1];
        }
    }
    encrypted[j] = '\0';
}

int main() {
    char plaintext[] = "Must see you over Cadogan West. Coming at once.";
    char preparedText[100];
    char encrypted[100];
    char matrix[MATRIX_SIZE][MATRIX_SIZE];

    prepareText(plaintext, preparedText);
    generatePlayfairMatrix(matrix);
    playfairEncrypt(preparedText, matrix, encrypted);

    printf("Encrypted message: %s\n", encrypted);

    printf("\n\n\nsuthesan vj   192210542\n");

    return 0;
}
