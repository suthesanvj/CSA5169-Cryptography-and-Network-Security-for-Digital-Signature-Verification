#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26

void generateCipherAlphabet(char keyword[], char cipherAlphabet[]) {
    int used[ALPHABET_SIZE] = {0};
    int index = 0;
    
    for (int i = 0; keyword[i] != '\0'; i++) {
        char ch = toupper(keyword[i]);
        if (ch >= 'A' && ch <= 'Z' && !used[ch - 'A']) {
            cipherAlphabet[index++] = ch;
            used[ch - 'A'] = 1;
        }
    }
    
    for (char ch = 'A'; ch <= 'Z'; ch++) {
        if (!used[ch - 'A']) {
            cipherAlphabet[index++] = ch;
        }
    }
}

void encryptMessage(char plaintext[], char cipherAlphabet[], char encrypted[]) {
    char plainAlphabet[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int i, j;
    
    for (i = 0; plaintext[i] != '\0'; i++) {
        char ch = toupper(plaintext[i]);
        if (ch >= 'A' && ch <= 'Z') {
            for (j = 0; j < ALPHABET_SIZE; j++) {
                if (plainAlphabet[j] == ch) {
                    encrypted[i] = cipherAlphabet[j];
                    break;
                }
            }
        } else {
            encrypted[i] = plaintext[i];
        }
    }
    encrypted[i] = '\0';
}

void decryptMessage(char encrypted[], char cipherAlphabet[], char decrypted[]) {
    char plainAlphabet[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    int i, j;
    
    for (i = 0; encrypted[i] != '\0'; i++) {
        char ch = toupper(encrypted[i]);
        if (ch >= 'A' && ch <= 'Z') {
            for (j = 0; j < ALPHABET_SIZE; j++) {
                if (cipherAlphabet[j] == ch) {
                    decrypted[i] = plainAlphabet[j];
                    break;
                }
            }
        } else {
            decrypted[i] = encrypted[i];
        }
    }
    decrypted[i] = '\0';
}

int main() {
    char keyword[] = "CIPHER";
    char plaintext[100], encrypted[100], decrypted[100];
    char cipherAlphabet[ALPHABET_SIZE];

    generateCipherAlphabet(keyword, cipherAlphabet);

    printf("Cipher Alphabet: ");
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        printf("%c ", cipherAlphabet[i]);
    }
    printf("\n");

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';  // Remove newline character

    encryptMessage(plaintext, cipherAlphabet, encrypted);
    printf("Encrypted message: %s\n", encrypted);

    decryptMessage(encrypted, cipherAlphabet, decrypted);
    printf("Decrypted message: %s\n", decrypted);

    printf("\n\n\nsuthesan vj   192210542\n");

    return 0;
}
